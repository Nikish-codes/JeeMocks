{"map":"{\"version\":3,\"sources\":[\"C:/Projects/JeeMocks.github.io/src/components/MockTest.js\",\"C:/Projects/JeeMocks.github.io/src/components/Result.js\",\"C:/Projects/JeeMocks.github.io/src/components/Homepage.js\",\"C:/Projects/JeeMocks.github.io/src/components/QuestionBank.js\",\"C:/Projects/JeeMocks.github.io/src/utils/questionLoader.js\",\"C:/Projects/JeeMocks.github.io/src/App.js\",\"C:/Projects/JeeMocks.github.io/src/index.js\"],\"names\":[\"MockTest\",\"_ref\",\"questions\",\"onTestEnd\",\"currentQuestion\",\"setCurrentQuestion\",\"useState\",\"selectedAnswer\",\"setSelectedAnswer\",\"timeLeft\",\"setTimeLeft\",\"userResponses\",\"setUserResponses\",\"markedQuestions\",\"setMarkedQuestions\",\"handleTestEnd\",\"useCallback\",\"score\",\"reduce\",\"acc\",\"response\",\"index\",\"correct_answer\",\"useEffect\",\"timer\",\"setInterval\",\"prevTime\",\"clearInterval\",\"handleAnswerChange\",\"event\",\"parseInt\",\"target\",\"value\",\"length\",\"React\",\"createElement\",\"question\",\"progressPercentage\",\"className\",\"question_value\",\"text\",\"img_url\",\"src\",\"alt\",\"options\",\"map\",\"option\",\"key\",\"type\",\"id\",\"name\",\"checked\",\"onChange\",\"htmlFor\",\"onClick\",\"prevQuestion\",\"handleNextQuestion\",\"prevResponses\",\"newResponses\",\"handleMarkQuestion\",\"prevMarked\",\"includes\",\"filter\",\"Math\",\"floor\",\"toString\",\"padStart\",\"style\",\"width\",\"_\",\"questionIndex\",\"handleQuestionPaletteClick\",\"undefined\",\"Result\",\"totalQuestions\",\"onGoBack\",\"percentage\",\"toFixed\",\"solution\",\"Homepage\",\"navigate\",\"useNavigate\",\"selectedTest\",\"setSelectedTest\",\"showTest\",\"setShowTest\",\"showResult\",\"setShowResult\",\"setScore\",\"Object\",\"keys\",\"test\",\"handleTestSelect\",\"testScore\",\"responses\",\"handleGoBack\",\"QuestionBank\",\"selectedSubject\",\"setSelectedSubject\",\"selectedTopic\",\"setSelectedTopic\",\"filteredQuestions\",\"setFilteredQuestions\",\"filtered\",\"values\",\"flat\",\"subject\",\"topic\",\"Fragment\",\"question_number\",\"loadQuestions\",\"async\",\"response2024\",\"fetch\",\"data2024\",\"json\",\"response2023\",\"data2023\",\"error\",\"console\",\"App\",\"setQuestions\",\"loadedQuestions\",\"fetchQuestions\",\"Router\",\"basename\",\"process\",\"Link\",\"to\",\"Routes\",\"Route\",\"path\",\"element\",\"ReactDOM\",\"createRoot\",\"document\",\"getElementById\",\"render\",\"StrictMode\"],\"mappings\":\"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\",\"sourcesContent\":[\"import React, { useState, useEffect, useCallback } from 'react';\\r\\nimport './MockTest.css';\\r\\n\\r\\nfunction MockTest({ questions, onTestEnd }) {\\r\\n  const [currentQuestion, setCurrentQuestion] = useState(0);\\r\\n  const [selectedAnswer, setSelectedAnswer] = useState(null);\\r\\n  const [timeLeft, setTimeLeft] = useState(1800); // 30 minutes in seconds\\r\\n  const [userResponses, setUserResponses] = useState([]);\\r\\n  const [markedQuestions, setMarkedQuestions] = useState([]);\\r\\n\\r\\n  // Move handleTestEnd here (above its first use)\\r\\n  const handleTestEnd = useCallback(() => {\\r\\n    const score = userResponses.reduce((acc, response, index) => {\\r\\n      if (response === questions[index].correct_answer) {\\r\\n        return acc + 1;\\r\\n      }\\r\\n      return acc;\\r\\n    }, 0);\\r\\n\\r\\n    onTestEnd(score, userResponses);\\r\\n  }, [userResponses, questions, onTestEnd]);\\r\\n\\r\\n  // Use useEffect with handleTestEnd\\r\\n  useEffect(() => {\\r\\n    const timer = setInterval(() => {\\r\\n      setTimeLeft(prevTime => prevTime - 1);\\r\\n    }, 1000);\\r\\n\\r\\n    if (timeLeft === 0) {\\r\\n      clearInterval(timer);\\r\\n      handleTestEnd();  // Now handleTestEnd is defined before being used\\r\\n    }\\r\\n\\r\\n    return () => clearInterval(timer);\\r\\n  }, [timeLeft, handleTestEnd]);\\r\\n\\r\\n  const handleAnswerChange = (event) => {\\r\\n    setSelectedAnswer(parseInt(event.target.value, 10));\\r\\n  };\\r\\n\\r\\n  const handleNextQuestion = () => {\\r\\n    setUserResponses(prevResponses => {\\r\\n      const newResponses = [...prevResponses];\\r\\n      newResponses[currentQuestion] = selectedAnswer;\\r\\n      return newResponses;\\r\\n    });\\r\\n\\r\\n    setSelectedAnswer(null);\\r\\n    setCurrentQuestion(prevQuestion => prevQuestion + 1);\\r\\n  };\\r\\n\\r\\n  const handleQuestionPaletteClick = (questionIndex) => {\\r\\n    setCurrentQuestion(questionIndex);\\r\\n    setSelectedAnswer(userResponses[questionIndex]);\\r\\n  };\\r\\n\\r\\n  const handleMarkQuestion = () => {\\r\\n    setMarkedQuestions(prevMarked => {\\r\\n      if (prevMarked.includes(currentQuestion)) {\\r\\n        return prevMarked.filter(index => index !== currentQuestion);\\r\\n      } else {\\r\\n        return [...prevMarked, currentQuestion];\\r\\n      }\\r\\n    });\\r\\n  };\\r\\n\\r\\n  if (!questions || questions.length === 0) {\\r\\n    return <div>Loading questions...</div>;\\r\\n  }\\r\\n\\r\\n  const question = questions[currentQuestion];\\r\\n  const progressPercentage = (currentQuestion / (questions.length - 1)) * 100;\\r\\n\\r\\n  return (\\r\\n    <div className=\\\"mock-test-container\\\">\\r\\n      <div className=\\\"question-section\\\">\\r\\n        <div className=\\\"question-count\\\">\\r\\n          <span>Question {currentQuestion + 1}</span>/{questions.length}\\r\\n        </div>\\r\\n        <div className=\\\"question-text\\\">{question.question_value.text}</div>\\r\\n        {question.question_value.img_url && (\\r\\n          <img src={question.question_value.img_url} alt=\\\"Question Illustration\\\" />\\r\\n        )}\\r\\n      </div>\\r\\n      <div className=\\\"answer-section\\\">\\r\\n        {question.options.map((option, index) => (\\r\\n          <div key={index}>\\r\\n            <input\\r\\n              type=\\\"radio\\\"\\r\\n              id={`option${index}`}\\r\\n              name=\\\"answer\\\"\\r\\n              value={index}\\r\\n              checked={selectedAnswer === index}\\r\\n              onChange={handleAnswerChange}\\r\\n            />\\r\\n            <label htmlFor={`option${index}`}>\\r\\n              {typeof option === 'object' ? (\\r\\n                <img src={option.img_url} alt={`Option ${index}`} />\\r\\n              ) : (\\r\\n                option\\r\\n              )}\\r\\n            </label>\\r\\n          </div>\\r\\n        ))}\\r\\n      </div>\\r\\n      <div className=\\\"navigation-section\\\">\\r\\n        {currentQuestion > 0 && (\\r\\n          <button onClick={() => setCurrentQuestion(prevQuestion => prevQuestion - 1)}>\\r\\n            Previous\\r\\n          </button>\\r\\n        )}\\r\\n        {currentQuestion < questions.length - 1 ? (\\r\\n          <button onClick={handleNextQuestion}>Next</button>\\r\\n        ) : (\\r\\n          <button onClick={handleTestEnd}>Submit</button>\\r\\n        )}\\r\\n        <button onClick={handleMarkQuestion}>Mark for Review</button>\\r\\n      </div>\\r\\n      <div className=\\\"timer-section\\\">\\r\\n        Time left: {Math.floor(timeLeft / 60)}:{(timeLeft % 60).toString().padStart(2, '0')}\\r\\n      </div>\\r\\n      <div className=\\\"progress-bar\\\">\\r\\n        <div\\r\\n          className=\\\"progress-bar-fill\\\"\\r\\n          style={{ width: `${progressPercentage}%` }}\\r\\n        ></div>\\r\\n      </div>\\r\\n      <div className=\\\"question-palette\\\">\\r\\n        {questions.map((_, index) => (\\r\\n          <button\\r\\n            key={index}\\r\\n            onClick={() => handleQuestionPaletteClick(index)}\\r\\n            className={`palette-button ${\\r\\n              userResponses[index] !== undefined ? 'answered' : ''\\r\\n            } ${markedQuestions.includes(index) ? 'marked' : ''}`}\\r\\n          >\\r\\n            {index + 1}\\r\\n          </button>\\r\\n        ))}\\r\\n      </div>\\r\\n    </div>\\r\\n  );\\r\\n}\\r\\n\\r\\nexport default MockTest;\\r\\n\",\"import React from 'react';\\r\\nimport './Result.css';\\r\\n\\r\\nfunction Result({ score, totalQuestions, userResponses, questions, onGoBack }) {\\r\\n  const percentage = (score / totalQuestions) * 100;\\r\\n\\r\\n  return (\\r\\n    <div className=\\\"result-container\\\">\\r\\n      <h2>Test Results</h2>\\r\\n      <div className=\\\"score-summary\\\">\\r\\n        <p>You scored {score} out of {totalQuestions} questions.</p>\\r\\n        <p>Percentage: {percentage.toFixed(2)}%</p>\\r\\n      </div>\\r\\n      <div className=\\\"analysis\\\">\\r\\n        <h3>Detailed Analysis</h3>\\r\\n        {questions.map((question, index) => (\\r\\n          <div key={index} className=\\\"question-analysis\\\">\\r\\n            <h4>Question {index + 1}</h4>\\r\\n            <p>Your Answer: {question.options[userResponses[index]]}</p>\\r\\n            <p>Correct Answer: {question.options[question.correct_answer]}</p>\\r\\n            {userResponses[index] !== question.correct_answer && (\\r\\n              <div className=\\\"solution\\\">\\r\\n                <h5>Solution:</h5>\\r\\n                <p>{question.solution}</p>\\r\\n              </div>\\r\\n            )}\\r\\n          </div>\\r\\n        ))}\\r\\n      </div>\\r\\n      <button onClick={onGoBack}>Go Back</button>\\r\\n    </div>\\r\\n  );\\r\\n}\\r\\n\\r\\nexport default Result;\\r\\n\",\"import React, { useState } from 'react';\\r\\nimport { useNavigate } from 'react-router-dom';\\r\\nimport MockTest from './MockTest';\\r\\nimport Result from './Result';\\r\\nimport './Homepage.css';\\r\\n\\r\\nfunction Homepage({ questions }) {\\r\\n  const navigate = useNavigate();\\r\\n  const [selectedTest, setSelectedTest] = useState(null);\\r\\n  const [showTest, setShowTest] = useState(false);\\r\\n  const [showResult, setShowResult] = useState(false);\\r\\n  const [score, setScore] = useState(0);\\r\\n  const [userResponses, setUserResponses] = useState([]);\\r\\n\\r\\n  const handleTestSelect = (test) => {\\r\\n    setSelectedTest(test);\\r\\n    setShowTest(true);\\r\\n  };\\r\\n\\r\\n  const handleTestEnd = (testScore, responses) => {\\r\\n    setScore(testScore);\\r\\n    setUserResponses(responses);\\r\\n    setShowTest(false);\\r\\n    setShowResult(true);\\r\\n  };\\r\\n\\r\\n  const handleGoBack = () => {\\r\\n    setShowResult(false);\\r\\n    setSelectedTest(null);\\r\\n  };\\r\\n\\r\\n  return (\\r\\n    <div className=\\\"homepage-container\\\">\\r\\n      {!showTest && !showResult && (\\r\\n        <div className=\\\"test-selection\\\">\\r\\n          <h2>Select a Mock Test</h2>\\r\\n          {Object.keys(questions).map((test) => (\\r\\n            <button key={test} onClick={() => handleTestSelect(test)}>\\r\\n              {test}\\r\\n            </button>\\r\\n          ))}\\r\\n          <button onClick={() => navigate('/question-bank')}>\\r\\n            Question Bank\\r\\n          </button>\\r\\n        </div>\\r\\n      )}\\r\\n      {showTest && selectedTest && (\\r\\n        <MockTest\\r\\n          questions={questions[selectedTest]}\\r\\n          onTestEnd={handleTestEnd}\\r\\n        />\\r\\n      )}\\r\\n      {showResult && (\\r\\n        <Result\\r\\n          score={score}\\r\\n          totalQuestions={questions[selectedTest].length}\\r\\n          userResponses={userResponses}\\r\\n          questions={questions[selectedTest]}\\r\\n          onGoBack={handleGoBack}\\r\\n        />\\r\\n      )}\\r\\n    </div>\\r\\n  );\\r\\n}\\r\\n\\r\\nexport default Homepage;\\r\\n\",\"import React, { useState, useEffect } from 'react';\\r\\nimport './QuestionBank.css';\\r\\n\\r\\nfunction QuestionBank({ questions }) {\\r\\n  const [selectedSubject, setSelectedSubject] = useState(null);\\r\\n  const [selectedTopic, setSelectedTopic] = useState(null);\\r\\n  const [filteredQuestions, setFilteredQuestions] = useState([]);\\r\\n\\r\\n  useEffect(() => {\\r\\n    const filtered = Object.values(questions)\\r\\n      .flat()\\r\\n      .filter(question => {\\r\\n        if (selectedSubject && question.subject !== selectedSubject) {\\r\\n          return false;\\r\\n        }\\r\\n        if (selectedTopic && question.topic !== selectedTopic) {\\r\\n          return false;\\r\\n        }\\r\\n        return true;\\r\\n      });\\r\\n    setFilteredQuestions(filtered);\\r\\n  }, [questions, selectedSubject, selectedTopic]);\\r\\n\\r\\n  const handleSubjectChange = (event) => {\\r\\n    setSelectedSubject(event.target.value);\\r\\n    setSelectedTopic(null); // Reset topic when subject changes\\r\\n  };\\r\\n\\r\\n  const handleTopicChange = (event) => {\\r\\n    setSelectedTopic(event.target.value);\\r\\n  };\\r\\n\\r\\n  return (\\r\\n    <div className=\\\"question-bank-container\\\">\\r\\n      <h2>Question Bank</h2>\\r\\n      <div className=\\\"filters\\\">\\r\\n        <div>\\r\\n          <label htmlFor=\\\"subject\\\">Subject:</label>\\r\\n          <select id=\\\"subject\\\" value={selectedSubject || ''} onChange={handleSubjectChange}>\\r\\n            <option value=\\\"\\\">All</option>\\r\\n            <option value=\\\"Physics\\\">Physics</option>\\r\\n            <option value=\\\"Chemistry\\\">Chemistry</option>\\r\\n            <option value=\\\"Mathematics\\\">Mathematics</option>\\r\\n          </select>\\r\\n        </div>\\r\\n        <div>\\r\\n          <label htmlFor=\\\"topic\\\">Topic:</label>\\r\\n          <select id=\\\"topic\\\" value={selectedTopic || ''} onChange={handleTopicChange}>\\r\\n            <option value=\\\"\\\">All</option>\\r\\n            {selectedSubject === 'Physics' && (\\r\\n              <>\\r\\n                <option value=\\\"Mechanics\\\">Mechanics</option>\\r\\n                <option value=\\\"Thermodynamics\\\">Thermodynamics</option>\\r\\n              </>\\r\\n            )}\\r\\n            {selectedSubject === 'Chemistry' && (\\r\\n              <>\\r\\n                <option value=\\\"Organic Chemistry\\\">Organic Chemistry</option>\\r\\n                <option value=\\\"Inorganic Chemistry\\\">Inorganic Chemistry</option>\\r\\n              </>\\r\\n            )}\\r\\n            {selectedSubject === 'Mathematics' && (\\r\\n              <>\\r\\n                <option value=\\\"Calculus\\\">Calculus</option>\\r\\n                <option value=\\\"Algebra\\\">Algebra</option>\\r\\n              </>\\r\\n            )}\\r\\n          </select>\\r\\n        </div>\\r\\n      </div>\\r\\n      <div className=\\\"question-list\\\">\\r\\n        {filteredQuestions.map((question, index) => (\\r\\n          <div key={index} className=\\\"question-item\\\">\\r\\n            <div className=\\\"question-header\\\">\\r\\n              <span className=\\\"question-number\\\">Question {question.question_number}</span>\\r\\n              <span className=\\\"question-subject\\\">{question.subject}</span>\\r\\n            </div>\\r\\n            <div className=\\\"question-text\\\">{question.question_value.text}</div>\\r\\n            {question.question_value.img_url && (\\r\\n              <img src={question.question_value.img_url} alt=\\\"Question Illustration\\\" />\\r\\n            )}\\r\\n            <details>\\r\\n              <summary>View Solution</summary>\\r\\n              <div className=\\\"solution\\\">{question.solution}</div>\\r\\n            </details>\\r\\n          </div>\\r\\n        ))}\\r\\n      </div>\\r\\n    </div>\\r\\n  );\\r\\n}\\r\\n\\r\\nexport default QuestionBank;\\r\\n\",\"// Function to load question data from JSON files\\r\\nexport const loadQuestions = async () => {\\r\\n  try {\\r\\n    const questions = {};\\r\\n    \\r\\n    // Replace with your actual file paths and fetching logic\\r\\n    const response2024 = await fetch('/2024_mains.json');\\r\\n    const data2024 = await response2024.json();\\r\\n    questions['2024 Mains'] = data2024;\\r\\n\\r\\n    const response2023 = await fetch('/2023_mains.json');\\r\\n    const data2023 = await response2023.json();\\r\\n    questions['2023 Mains'] = data2023;\\r\\n\\r\\n    // Add additional question sets as needed\\r\\n    // Example:\\r\\n    // const response2022 = await fetch('/2022_mains.json');\\r\\n    // const data2022 = await response2022.json();\\r\\n    // questions['2022 Mains'] = data2022;\\r\\n\\r\\n    return questions;\\r\\n  } catch (error) {\\r\\n    console.error('Error loading questions:', error);\\r\\n    return {};\\r\\n  }\\r\\n};\\r\\n\",\"\\r\\nimport React, { useState, useEffect } from 'react';\\r\\nimport { HashRouter as Router, Routes, Route, Link } from 'react-router-dom';\\r\\nimport Homepage from './components/Homepage';\\r\\nimport QuestionBank from './components/QuestionBank';\\r\\nimport { loadQuestions } from './utils/questionLoader';\\r\\nimport './App.css';\\r\\n\\r\\nfunction App() {\\r\\n  const [questions, setQuestions] = useState({});\\r\\n\\r\\n  useEffect(() => {\\r\\n    const fetchQuestions = async () => {\\r\\n      const loadedQuestions = await loadQuestions();\\r\\n      setQuestions(loadedQuestions);\\r\\n    };\\r\\n\\r\\n    fetchQuestions();\\r\\n  }, []);\\r\\n\\r\\n  return (\\r\\n    <Router basename={process.env.PUBLIC_URL}>\\r\\n      <div className=\\\"app-container\\\">\\r\\n        <nav>\\r\\n          <ul>\\r\\n            <li>\\r\\n              <Link to=\\\"/\\\">Home</Link>\\r\\n            </li>\\r\\n            <li>\\r\\n              <Link to=\\\"/question-bank\\\">Question Bank</Link>\\r\\n            </li>\\r\\n          </ul>\\r\\n        </nav>\\r\\n        <Routes>\\r\\n          <Route path=\\\"/\\\" element={<Homepage questions={questions} />} />\\r\\n          <Route path=\\\"/question-bank\\\" element={<QuestionBank questions={questions} />} />\\r\\n        </Routes>\\r\\n      </div>\\r\\n    </Router>\\r\\n  );\\r\\n}\\r\\n\\r\\nexport default App;\\r\\n\",\"import React from 'react';\\r\\nimport ReactDOM from 'react-dom/client';\\r\\nimport './index.css';\\r\\nimport App from './App';\\r\\n\\r\\nconst root = ReactDOM.createRoot(document.getElementById('root'));\\r\\n\\r\\nroot.render(\\r\\n  <React.StrictMode>\\r\\n    <App />\\r\\n  </React.StrictMode>\\r\\n);\\r\\n\"]}","code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[0],[,,,,,,,function(e,t,a){e.exports=a(21)},,,,,,,,function(e,t,a){},function(e,t,a){},function(e,t,a){},function(e,t,a){},function(e,t,a){},function(e,t,a){},function(e,t,a){\"use strict\";a.r(t);var n=a(0),l=a.n(n),c=a(6),s=a.n(c),r=(a(15),a(3)),o=a(2);a(16);var i=function(e){let{questions:t,onTestEnd:a}=e;const[c,s]=Object(n.useState)(0),[r,o]=Object(n.useState)(null),[i,u]=Object(n.useState)(1800),[m,E]=Object(n.useState)([]),[v,d]=Object(n.useState)([]),b=Object(n.useCallback)(()=>{const e=m.reduce((e,a,n)=>a===t[n].correct_answer?e+1:e,0);a(e,m)},[m,t,a]);Object(n.useEffect)(()=>{const e=setInterval(()=>{u(e=>e-1)},1e3);return 0===i&&(clearInterval(e),b()),()=>clearInterval(e)},[i,b]);const p=e=>{o(parseInt(e.target.value,10))};if(!t||0===t.length)return l.a.createElement(\"div\",null,\"Loading questions...\");const h=t[c],g=c/(t.length-1)*100;return l.a.createElement(\"div\",{className:\"mock-test-container\"},l.a.createElement(\"div\",{className:\"question-section\"},l.a.createElement(\"div\",{className:\"question-count\"},l.a.createElement(\"span\",null,\"Question \",c+1),\"/\",t.length),l.a.createElement(\"div\",{className:\"question-text\"},h.question_value.text),h.question_value.img_url&&l.a.createElement(\"img\",{src:h.question_value.img_url,alt:\"Question Illustration\"})),l.a.createElement(\"div\",{className:\"answer-section\"},h.options.map((e,t)=>l.a.createElement(\"div\",{key:t},l.a.createElement(\"input\",{type:\"radio\",id:`option${t}`,name:\"answer\",value:t,checked:r===t,onChange:p}),l.a.createElement(\"label\",{htmlFor:`option${t}`},\"object\"===typeof e?l.a.createElement(\"img\",{src:e.img_url,alt:`Option ${t}`}):e)))),l.a.createElement(\"div\",{className:\"navigation-section\"},c>0&&l.a.createElement(\"button\",{onClick:()=>s(e=>e-1)},\"Previous\"),c<t.length-1?l.a.createElement(\"button\",{onClick:()=>{E(e=>{const t=[...e];return t[c]=r,t}),o(null),s(e=>e+1)}},\"Next\"):l.a.createElement(\"button\",{onClick:b},\"Submit\"),l.a.createElement(\"button\",{onClick:()=>{d(e=>e.includes(c)?e.filter(e=>e!==c):[...e,c])}},\"Mark for Review\")),l.a.createElement(\"div\",{className:\"timer-section\"},\"Time left: \",Math.floor(i/60),\":\",(i%60).toString().padStart(2,\"0\")),l.a.createElement(\"div\",{className:\"progress-bar\"},l.a.createElement(\"div\",{className:\"progress-bar-fill\",style:{width:`${g}%`}})),l.a.createElement(\"div\",{className:\"question-palette\"},t.map((e,t)=>l.a.createElement(\"button\",{key:t,onClick:()=>(e=>{s(e),o(m[e])})(t),className:`palette-button ${void 0!==m[t]?\"answered\":\"\"} ${v.includes(t)?\"marked\":\"\"}`},t+1))))};a(17);var u=function(e){let{score:t,totalQuestions:a,userResponses:n,questions:c,onGoBack:s}=e;const r=t/a*100;return l.a.createElement(\"div\",{className:\"result-container\"},l.a.createElement(\"h2\",null,\"Test Results\"),l.a.createElement(\"div\",{className:\"score-summary\"},l.a.createElement(\"p\",null,\"You scored \",t,\" out of \",a,\" questions.\"),l.a.createElement(\"p\",null,\"Percentage: \",r.toFixed(2),\"%\")),l.a.createElement(\"div\",{className:\"analysis\"},l.a.createElement(\"h3\",null,\"Detailed Analysis\"),c.map((e,t)=>l.a.createElement(\"div\",{key:t,className:\"question-analysis\"},l.a.createElement(\"h4\",null,\"Question \",t+1),l.a.createElement(\"p\",null,\"Your Answer: \",e.options[n[t]]),l.a.createElement(\"p\",null,\"Correct Answer: \",e.options[e.correct_answer]),n[t]!==e.correct_answer&&l.a.createElement(\"div\",{className:\"solution\"},l.a.createElement(\"h5\",null,\"Solution:\"),l.a.createElement(\"p\",null,e.solution))))),l.a.createElement(\"button\",{onClick:s},\"Go Back\"))};a(18);var m=function(e){let{questions:t}=e;const a=Object(o.o)(),[c,s]=Object(n.useState)(null),[r,m]=Object(n.useState)(!1),[E,v]=Object(n.useState)(!1),[d,b]=Object(n.useState)(0),[p,h]=Object(n.useState)([]);return l.a.createElement(\"div\",{className:\"homepage-container\"},!r&&!E&&l.a.createElement(\"div\",{className:\"test-selection\"},l.a.createElement(\"h2\",null,\"Select a Mock Test\"),Object.keys(t).map(e=>l.a.createElement(\"button\",{key:e,onClick:()=>(e=>{s(e),m(!0)})(e)},e)),l.a.createElement(\"button\",{onClick:()=>a(\"/question-bank\")},\"Question Bank\")),r&&c&&l.a.createElement(i,{questions:t[c],onTestEnd:(e,t)=>{b(e),h(t),m(!1),v(!0)}}),E&&l.a.createElement(u,{score:d,totalQuestions:t[c].length,userResponses:p,questions:t[c],onGoBack:()=>{v(!1),s(null)}}))};a(19);var E=function(e){let{questions:t}=e;const[a,c]=Object(n.useState)(null),[s,r]=Object(n.useState)(null),[o,i]=Object(n.useState)([]);return Object(n.useEffect)(()=>{const e=Object.values(t).flat().filter(e=>(!a||e.subject===a)&&(!s||e.topic===s));i(e)},[t,a,s]),l.a.createElement(\"div\",{className:\"question-bank-container\"},l.a.createElement(\"h2\",null,\"Question Bank\"),l.a.createElement(\"div\",{className:\"filters\"},l.a.createElement(\"div\",null,l.a.createElement(\"label\",{htmlFor:\"subject\"},\"Subject:\"),l.a.createElement(\"select\",{id:\"subject\",value:a||\"\",onChange:e=>{c(e.target.value),r(null)}},l.a.createElement(\"option\",{value:\"\"},\"All\"),l.a.createElement(\"option\",{value:\"Physics\"},\"Physics\"),l.a.createElement(\"option\",{value:\"Chemistry\"},\"Chemistry\"),l.a.createElement(\"option\",{value:\"Mathematics\"},\"Mathematics\"))),l.a.createElement(\"div\",null,l.a.createElement(\"label\",{htmlFor:\"topic\"},\"Topic:\"),l.a.createElement(\"select\",{id:\"topic\",value:s||\"\",onChange:e=>{r(e.target.value)}},l.a.createElement(\"option\",{value:\"\"},\"All\"),\"Physics\"===a&&l.a.createElement(l.a.Fragment,null,l.a.createElement(\"option\",{value:\"Mechanics\"},\"Mechanics\"),l.a.createElement(\"option\",{value:\"Thermodynamics\"},\"Thermodynamics\")),\"Chemistry\"===a&&l.a.createElement(l.a.Fragment,null,l.a.createElement(\"option\",{value:\"Organic Chemistry\"},\"Organic Chemistry\"),l.a.createElement(\"option\",{value:\"Inorganic Chemistry\"},\"Inorganic Chemistry\")),\"Mathematics\"===a&&l.a.createElement(l.a.Fragment,null,l.a.createElement(\"option\",{value:\"Calculus\"},\"Calculus\"),l.a.createElement(\"option\",{value:\"Algebra\"},\"Algebra\"))))),l.a.createElement(\"div\",{className:\"question-list\"},o.map((e,t)=>l.a.createElement(\"div\",{key:t,className:\"question-item\"},l.a.createElement(\"div\",{className:\"question-header\"},l.a.createElement(\"span\",{className:\"question-number\"},\"Question \",e.question_number),l.a.createElement(\"span\",{className:\"question-subject\"},e.subject)),l.a.createElement(\"div\",{className:\"question-text\"},e.question_value.text),e.question_value.img_url&&l.a.createElement(\"img\",{src:e.question_value.img_url,alt:\"Question Illustration\"}),l.a.createElement(\"details\",null,l.a.createElement(\"summary\",null,\"View Solution\"),l.a.createElement(\"div\",{className:\"solution\"},e.solution))))))};const v=async()=>{try{const t={},a=await fetch(\"/2024_mains.json\"),n=await a.json();t[\"2024 Mains\"]=n;const l=await fetch(\"/2023_mains.json\"),c=await l.json();return t[\"2023 Mains\"]=c,t}catch(e){return console.error(\"Error loading questions:\",e),{}}};a(20);var d=function(){const[e,t]=Object(n.useState)({});return Object(n.useEffect)(()=>{(async()=>{const e=await v();t(e)})()},[]),l.a.createElement(r.a,{basename:\"/JeeMocks\"},l.a.createElement(\"div\",{className:\"app-container\"},l.a.createElement(\"nav\",null,l.a.createElement(\"ul\",null,l.a.createElement(\"li\",null,l.a.createElement(r.b,{to:\"/\"},\"Home\")),l.a.createElement(\"li\",null,l.a.createElement(r.b,{to:\"/question-bank\"},\"Question Bank\")))),l.a.createElement(o.c,null,l.a.createElement(o.a,{path:\"/\",element:l.a.createElement(m,{questions:e})}),l.a.createElement(o.a,{path:\"/question-bank\",element:l.a.createElement(E,{questions:e})}))))};s.a.createRoot(document.getElementById(\"root\")).render(l.a.createElement(l.a.StrictMode,null,l.a.createElement(d,null)))}],[[7,1,2]]]);","extractedComments":[]}