{"ast":null,"code":"import React,{useState,useEffect}from'react';import'./MockTest.css';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";function MockTest(_ref){let{questions,onTestEnd}=_ref;// ... (previous code)\n// ... (other state variables)\nconst[markedQuestions,setMarkedQuestions]=useState([]);// ... (other functions)\nconst handleQuestionPaletteClick=questionIndex=>{setCurrentQuestion(questionIndex);setSelectedAnswer(userResponses[questionIndex]);};const handleMarkQuestion=()=>{setMarkedQuestions(prevMarked=>{if(prevMarked.includes(currentQuestion)){return prevMarked.filter(index=>index!==currentQuestion);}else{return[...prevMarked,currentQuestion];}});};// ... (rest of the component code)\nreturn/*#__PURE__*/_jsxs(\"div\",{className:\"mock-test-container\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"question-palette\",children:questions.map((_,index)=>/*#__PURE__*/_jsx(\"button\",{onClick:()=>handleQuestionPaletteClick(index),className:`palette-button ${userResponses[index]!==undefined?'answered':''} ${markedQuestions.includes(index)?'marked':''}`,children:index+1},index))}),/*#__PURE__*/_jsx(\"div\",{className:\"navigation-section\",children:/*#__PURE__*/_jsx(\"button\",{onClick:handleMarkQuestion,children:\"Mark for Review\"})})]});const[currentQuestion,setCurrentQuestion]=useState(0);const[selectedAnswer,setSelectedAnswer]=useState(null);const[timeLeft,setTimeLeft]=useState(1800);// 30 minutes in seconds\nconst[userResponses,setUserResponses]=useState([]);useEffect(()=>{const timer=setInterval(()=>{setTimeLeft(prevTime=>prevTime-1);},1000);if(timeLeft===0){clearInterval(timer);handleTestEnd();}return()=>clearInterval(timer);},[timeLeft,handleTestEnd]);const handleAnswerChange=event=>{setSelectedAnswer(parseInt(event.target.value,10));};const handleNextQuestion=()=>{setUserResponses(prevResponses=>{const newResponses=[...prevResponses];newResponses[currentQuestion]=selectedAnswer;return newResponses;});setSelectedAnswer(null);setCurrentQuestion(prevQuestion=>prevQuestion+1);};const handleTestEnd=()=>{// Calculate score and pass responses to parent component\nconst score=userResponses.reduce((acc,response,index)=>{if(response===questions[index].correct_answer){return acc+1;}return acc;},0);onTestEnd(score,userResponses);};if(!questions||questions.length===0){return/*#__PURE__*/_jsx(\"div\",{children:\"Loading questions...\"});}const question=questions[currentQuestion];return/*#__PURE__*/_jsxs(\"div\",{className:\"mock-test-container\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"question-section\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"question-count\",children:[/*#__PURE__*/_jsxs(\"span\",{children:[\"Question \",currentQuestion+1]}),\"/\",questions.length]}),/*#__PURE__*/_jsx(\"div\",{className:\"question-text\",children:question.question_value.text}),question.question_value.img_url&&/*#__PURE__*/_jsx(\"img\",{src:question.question_value.img_url,alt:\"Question Illustration\"})]}),/*#__PURE__*/_jsx(\"div\",{className:\"answer-section\",children:question.options.map((option,index)=>/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"input\",{type:\"radio\",id:`option${index}`,name:\"answer\",value:index,checked:selectedAnswer===index,onChange:handleAnswerChange}),/*#__PURE__*/_jsx(\"label\",{htmlFor:`option${index}`,children:typeof option==='object'?/*#__PURE__*/_jsx(\"img\",{src:option.img_url,alt:`Option ${index}`}):option})]},index))}),/*#__PURE__*/_jsxs(\"div\",{className:\"navigation-section\",children:[currentQuestion>0&&/*#__PURE__*/_jsx(\"button\",{onClick:()=>setCurrentQuestion(prevQuestion=>prevQuestion-1),children:\"Previous\"}),currentQuestion<questions.length-1?/*#__PURE__*/_jsx(\"button\",{onClick:handleNextQuestion,children:\"Next\"}):/*#__PURE__*/_jsx(\"button\",{onClick:handleTestEnd,children:\"Submit\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"timer-section\",children:[\"Time left: \",Math.floor(timeLeft/60),\":\",(timeLeft%60).toString().padStart(2,'0')]})]});}export default MockTest;","map":{"version":3,"names":["React","useState","useEffect","jsx","_jsx","jsxs","_jsxs","MockTest","_ref","questions","onTestEnd","markedQuestions","setMarkedQuestions","handleQuestionPaletteClick","questionIndex","setCurrentQuestion","setSelectedAnswer","userResponses","handleMarkQuestion","prevMarked","includes","currentQuestion","filter","index","className","children","map","_","onClick","undefined","selectedAnswer","timeLeft","setTimeLeft","setUserResponses","timer","setInterval","prevTime","clearInterval","handleTestEnd","handleAnswerChange","event","parseInt","target","value","handleNextQuestion","prevResponses","newResponses","prevQuestion","score","reduce","acc","response","correct_answer","length","question","question_value","text","img_url","src","alt","options","option","type","id","name","checked","onChange","htmlFor","Math","floor","toString","padStart"],"sources":["C:/Users/sriba/Documents/GitHub Repo Mocks/JeeMocks.github.io/src/components/MockTest.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport './MockTest.css';\r\n\r\nfunction MockTest({ questions, onTestEnd }) {\r\n\t\r\n\t\r\n\t// ... (previous code)\r\n\r\n  // ... (other state variables)\r\n  const [markedQuestions, setMarkedQuestions] = useState([]);\r\n\r\n  // ... (other functions)\r\n\r\n  const handleQuestionPaletteClick = (questionIndex) => {\r\n    setCurrentQuestion(questionIndex);\r\n    setSelectedAnswer(userResponses[questionIndex]);\r\n  };\r\n\r\n  const handleMarkQuestion = () => {\r\n    setMarkedQuestions(prevMarked => {\r\n      if (prevMarked.includes(currentQuestion)) {\r\n        return prevMarked.filter(index => index !== currentQuestion);\r\n      } else {\r\n        return [...prevMarked, currentQuestion];\r\n      }\r\n    });\r\n  };\r\n\r\n  // ... (rest of the component code)\r\n\r\n  return (\r\n    <div className=\"mock-test-container\">\r\n      {/* ... (other sections) */}\r\n\r\n      <div className=\"question-palette\">\r\n        {questions.map((_, index) => (\r\n          <button\r\n            key={index}\r\n            onClick={() => handleQuestionPaletteClick(index)}\r\n            className={`palette-button ${\r\n              userResponses[index] !== undefined ? 'answered' : ''\r\n            } ${markedQuestions.includes(index) ? 'marked' : ''}`}\r\n          >\r\n            {index + 1}\r\n          </button>\r\n        ))}\r\n      </div>\r\n\r\n      {/* ... (rest of the component code) */}\r\n\r\n      <div className=\"navigation-section\">\r\n        {/* ... (previous buttons) */}\r\n        <button onClick={handleMarkQuestion}>Mark for Review</button>\r\n      </div>\r\n\r\n      {/* ... (rest of the component code) */}\r\n    </div>\r\n  );\r\n\r\n\t\r\n\t\r\n  const [currentQuestion, setCurrentQuestion] = useState(0);\r\n  const [selectedAnswer, setSelectedAnswer] = useState(null);\r\n  const [timeLeft, setTimeLeft] = useState(1800); // 30 minutes in seconds\r\n  const [userResponses, setUserResponses] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const timer = setInterval(() => {\r\n      setTimeLeft(prevTime => prevTime - 1);\r\n    }, 1000);\r\n\r\n    if (timeLeft === 0) {\r\n      clearInterval(timer);\r\n      handleTestEnd();\r\n    }\r\n\r\n    return () => clearInterval(timer);\r\n  }, [timeLeft, handleTestEnd]);\r\n\r\n  const handleAnswerChange = (event) => {\r\n    setSelectedAnswer(parseInt(event.target.value, 10));\r\n  };\r\n\r\n  const handleNextQuestion = () => {\r\n    setUserResponses(prevResponses => {\r\n      const newResponses = [...prevResponses];\r\n      newResponses[currentQuestion] = selectedAnswer;\r\n      return newResponses;\r\n    });\r\n\r\n    setSelectedAnswer(null);\r\n    setCurrentQuestion(prevQuestion => prevQuestion + 1);\r\n  };\r\n\r\n  const handleTestEnd = () => {\r\n    // Calculate score and pass responses to parent component\r\n    const score = userResponses.reduce((acc, response, index) => {\r\n      if (response === questions[index].correct_answer) {\r\n        return acc + 1;\r\n      }\r\n      return acc;\r\n    }, 0);\r\n\r\n    onTestEnd(score, userResponses);\r\n  };\r\n\r\n  if (!questions || questions.length === 0) {\r\n    return <div>Loading questions...</div>;\r\n  }\r\n\r\n  const question = questions[currentQuestion];\r\n\r\n  return (\r\n    <div className=\"mock-test-container\">\r\n      <div className=\"question-section\">\r\n        <div className=\"question-count\">\r\n          <span>Question {currentQuestion + 1}</span>/{questions.length}\r\n        </div>\r\n        <div className=\"question-text\">{question.question_value.text}</div>\r\n        {question.question_value.img_url && (\r\n          <img src={question.question_value.img_url} alt=\"Question Illustration\" />\r\n        )}\r\n      </div>\r\n      <div className=\"answer-section\">\r\n        {question.options.map((option, index) => (\r\n          <div key={index}>\r\n            <input\r\n              type=\"radio\"\r\n              id={`option${index}`}\r\n              name=\"answer\"\r\n              value={index}\r\n              checked={selectedAnswer === index}\r\n              onChange={handleAnswerChange}\r\n            />\r\n            <label htmlFor={`option${index}`}>\r\n              {typeof option === 'object' ? (\r\n                <img src={option.img_url} alt={`Option ${index}`} />\r\n              ) : (\r\n                option\r\n              )}\r\n            </label>\r\n          </div>\r\n        ))}\r\n      </div>\r\n      <div className=\"navigation-section\">\r\n        {currentQuestion > 0 && (\r\n          <button onClick={() => setCurrentQuestion(prevQuestion => prevQuestion - 1)}>\r\n            Previous\r\n          </button>\r\n        )}\r\n        {currentQuestion < questions.length - 1 ? (\r\n          <button onClick={handleNextQuestion}>Next</button>\r\n        ) : (\r\n          <button onClick={handleTestEnd}>Submit</button>\r\n        )}\r\n      </div>\r\n      <div className=\"timer-section\">\r\n        Time left: {Math.floor(timeLeft / 60)}:{(timeLeft % 60).toString().padStart(2, '0')}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\n\r\n\r\nexport default MockTest;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}