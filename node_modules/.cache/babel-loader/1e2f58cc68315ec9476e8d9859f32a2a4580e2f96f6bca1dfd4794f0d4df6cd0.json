{"ast":null,"code":"import React,{useState,useEffect,useCallback}from'react';import'./MockTest.css';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";function MockTest(_ref){let{questions,onTestEnd}=_ref;const[currentQuestion,setCurrentQuestion]=useState(0);const[selectedAnswer,setSelectedAnswer]=useState(null);const[timeLeft,setTimeLeft]=useState(1800);// 30 minutes in seconds\nconst[userResponses,setUserResponses]=useState([]);const[markedQuestions,setMarkedQuestions]=useState([]);// Move handleTestEnd here (above its first use)\nconst handleTestEnd=useCallback(()=>{const score=userResponses.reduce((acc,response,index)=>{if(response===questions[index].correct_answer){return acc+1;}return acc;},0);onTestEnd(score,userResponses);},[userResponses,questions,onTestEnd]);// Use useEffect with handleTestEnd\nuseEffect(()=>{const timer=setInterval(()=>{setTimeLeft(prevTime=>prevTime-1);},1000);if(timeLeft===0){clearInterval(timer);handleTestEnd();// Now handleTestEnd is defined before being used\n}return()=>clearInterval(timer);},[timeLeft,handleTestEnd]);const handleAnswerChange=event=>{setSelectedAnswer(parseInt(event.target.value,10));};const handleNextQuestion=()=>{setUserResponses(prevResponses=>{const newResponses=[...prevResponses];newResponses[currentQuestion]=selectedAnswer;return newResponses;});setSelectedAnswer(null);setCurrentQuestion(prevQuestion=>prevQuestion+1);};const handleQuestionPaletteClick=questionIndex=>{setCurrentQuestion(questionIndex);setSelectedAnswer(userResponses[questionIndex]);};const handleMarkQuestion=()=>{setMarkedQuestions(prevMarked=>{if(prevMarked.includes(currentQuestion)){return prevMarked.filter(index=>index!==currentQuestion);}else{return[...prevMarked,currentQuestion];}});};if(!questions||questions.length===0){return/*#__PURE__*/_jsx(\"div\",{children:\"Loading questions...\"});}const question=questions[currentQuestion];const progressPercentage=currentQuestion/(questions.length-1)*100;return/*#__PURE__*/_jsxs(\"div\",{className:\"mock-test-container\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"question-section\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"question-count\",children:[/*#__PURE__*/_jsxs(\"span\",{children:[\"Question \",currentQuestion+1]}),\"/\",questions.length]}),/*#__PURE__*/_jsx(\"div\",{className:\"question-text\",children:question.question_value.text}),question.question_value.img_url&&/*#__PURE__*/_jsx(\"img\",{src:question.question_value.img_url,alt:\"Question Illustration\"})]}),/*#__PURE__*/_jsx(\"div\",{className:\"answer-section\",children:question.options.map((option,index)=>/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"input\",{type:\"radio\",id:`option${index}`,name:\"answer\",value:index,checked:selectedAnswer===index,onChange:handleAnswerChange}),/*#__PURE__*/_jsx(\"label\",{htmlFor:`option${index}`,children:typeof option==='object'?/*#__PURE__*/_jsx(\"img\",{src:option.img_url,alt:`Option ${index}`}):option})]},index))}),/*#__PURE__*/_jsxs(\"div\",{className:\"navigation-section\",children:[currentQuestion>0&&/*#__PURE__*/_jsx(\"button\",{onClick:()=>setCurrentQuestion(prevQuestion=>prevQuestion-1),children:\"Previous\"}),currentQuestion<questions.length-1?/*#__PURE__*/_jsx(\"button\",{onClick:handleNextQuestion,children:\"Next\"}):/*#__PURE__*/_jsx(\"button\",{onClick:handleTestEnd,children:\"Submit\"}),/*#__PURE__*/_jsx(\"button\",{onClick:handleMarkQuestion,children:\"Mark for Review\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"timer-section\",children:[\"Time left: \",Math.floor(timeLeft/60),\":\",(timeLeft%60).toString().padStart(2,'0')]}),/*#__PURE__*/_jsx(\"div\",{className:\"progress-bar\",children:/*#__PURE__*/_jsx(\"div\",{className:\"progress-bar-fill\",style:{width:`${progressPercentage}%`}})}),/*#__PURE__*/_jsx(\"div\",{className:\"question-palette\",children:questions.map((_,index)=>/*#__PURE__*/_jsx(\"button\",{onClick:()=>handleQuestionPaletteClick(index),className:`palette-button ${userResponses[index]!==undefined?'answered':''} ${markedQuestions.includes(index)?'marked':''}`,children:index+1},index))})]});}export default MockTest;","map":{"version":3,"names":["React","useState","useEffect","useCallback","jsx","_jsx","jsxs","_jsxs","MockTest","_ref","questions","onTestEnd","currentQuestion","setCurrentQuestion","selectedAnswer","setSelectedAnswer","timeLeft","setTimeLeft","userResponses","setUserResponses","markedQuestions","setMarkedQuestions","handleTestEnd","score","reduce","acc","response","index","correct_answer","timer","setInterval","prevTime","clearInterval","handleAnswerChange","event","parseInt","target","value","handleNextQuestion","prevResponses","newResponses","prevQuestion","handleQuestionPaletteClick","questionIndex","handleMarkQuestion","prevMarked","includes","filter","length","children","question","progressPercentage","className","question_value","text","img_url","src","alt","options","map","option","type","id","name","checked","onChange","htmlFor","onClick","Math","floor","toString","padStart","style","width","_","undefined"],"sources":["C:/JeeMocks/src/components/MockTest.js"],"sourcesContent":["import React, { useState, useEffect, useCallback } from 'react';\r\nimport './MockTest.css';\r\n\r\nfunction MockTest({ questions, onTestEnd }) {\r\n  const [currentQuestion, setCurrentQuestion] = useState(0);\r\n  const [selectedAnswer, setSelectedAnswer] = useState(null);\r\n  const [timeLeft, setTimeLeft] = useState(1800); // 30 minutes in seconds\r\n  const [userResponses, setUserResponses] = useState([]);\r\n  const [markedQuestions, setMarkedQuestions] = useState([]);\r\n\r\n  // Move handleTestEnd here (above its first use)\r\n  const handleTestEnd = useCallback(() => {\r\n    const score = userResponses.reduce((acc, response, index) => {\r\n      if (response === questions[index].correct_answer) {\r\n        return acc + 1;\r\n      }\r\n      return acc;\r\n    }, 0);\r\n\r\n    onTestEnd(score, userResponses);\r\n  }, [userResponses, questions, onTestEnd]);\r\n\r\n  // Use useEffect with handleTestEnd\r\n  useEffect(() => {\r\n    const timer = setInterval(() => {\r\n      setTimeLeft(prevTime => prevTime - 1);\r\n    }, 1000);\r\n\r\n    if (timeLeft === 0) {\r\n      clearInterval(timer);\r\n      handleTestEnd();  // Now handleTestEnd is defined before being used\r\n    }\r\n\r\n    return () => clearInterval(timer);\r\n  }, [timeLeft, handleTestEnd]);\r\n\r\n  const handleAnswerChange = (event) => {\r\n    setSelectedAnswer(parseInt(event.target.value, 10));\r\n  };\r\n\r\n  const handleNextQuestion = () => {\r\n    setUserResponses(prevResponses => {\r\n      const newResponses = [...prevResponses];\r\n      newResponses[currentQuestion] = selectedAnswer;\r\n      return newResponses;\r\n    });\r\n\r\n    setSelectedAnswer(null);\r\n    setCurrentQuestion(prevQuestion => prevQuestion + 1);\r\n  };\r\n\r\n  const handleQuestionPaletteClick = (questionIndex) => {\r\n    setCurrentQuestion(questionIndex);\r\n    setSelectedAnswer(userResponses[questionIndex]);\r\n  };\r\n\r\n  const handleMarkQuestion = () => {\r\n    setMarkedQuestions(prevMarked => {\r\n      if (prevMarked.includes(currentQuestion)) {\r\n        return prevMarked.filter(index => index !== currentQuestion);\r\n      } else {\r\n        return [...prevMarked, currentQuestion];\r\n      }\r\n    });\r\n  };\r\n\r\n  if (!questions || questions.length === 0) {\r\n    return <div>Loading questions...</div>;\r\n  }\r\n\r\n  const question = questions[currentQuestion];\r\n  const progressPercentage = (currentQuestion / (questions.length - 1)) * 100;\r\n\r\n  return (\r\n    <div className=\"mock-test-container\">\r\n      <div className=\"question-section\">\r\n        <div className=\"question-count\">\r\n          <span>Question {currentQuestion + 1}</span>/{questions.length}\r\n        </div>\r\n        <div className=\"question-text\">{question.question_value.text}</div>\r\n        {question.question_value.img_url && (\r\n          <img src={question.question_value.img_url} alt=\"Question Illustration\" />\r\n        )}\r\n      </div>\r\n      <div className=\"answer-section\">\r\n        {question.options.map((option, index) => (\r\n          <div key={index}>\r\n            <input\r\n              type=\"radio\"\r\n              id={`option${index}`}\r\n              name=\"answer\"\r\n              value={index}\r\n              checked={selectedAnswer === index}\r\n              onChange={handleAnswerChange}\r\n            />\r\n            <label htmlFor={`option${index}`}>\r\n              {typeof option === 'object' ? (\r\n                <img src={option.img_url} alt={`Option ${index}`} />\r\n              ) : (\r\n                option\r\n              )}\r\n            </label>\r\n          </div>\r\n        ))}\r\n      </div>\r\n      <div className=\"navigation-section\">\r\n        {currentQuestion > 0 && (\r\n          <button onClick={() => setCurrentQuestion(prevQuestion => prevQuestion - 1)}>\r\n            Previous\r\n          </button>\r\n        )}\r\n        {currentQuestion < questions.length - 1 ? (\r\n          <button onClick={handleNextQuestion}>Next</button>\r\n        ) : (\r\n          <button onClick={handleTestEnd}>Submit</button>\r\n        )}\r\n        <button onClick={handleMarkQuestion}>Mark for Review</button>\r\n      </div>\r\n      <div className=\"timer-section\">\r\n        Time left: {Math.floor(timeLeft / 60)}:{(timeLeft % 60).toString().padStart(2, '0')}\r\n      </div>\r\n      <div className=\"progress-bar\">\r\n        <div\r\n          className=\"progress-bar-fill\"\r\n          style={{ width: `${progressPercentage}%` }}\r\n        ></div>\r\n      </div>\r\n      <div className=\"question-palette\">\r\n        {questions.map((_, index) => (\r\n          <button\r\n            key={index}\r\n            onClick={() => handleQuestionPaletteClick(index)}\r\n            className={`palette-button ${\r\n              userResponses[index] !== undefined ? 'answered' : ''\r\n            } ${markedQuestions.includes(index) ? 'marked' : ''}`}\r\n          >\r\n            {index + 1}\r\n          </button>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default MockTest;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}