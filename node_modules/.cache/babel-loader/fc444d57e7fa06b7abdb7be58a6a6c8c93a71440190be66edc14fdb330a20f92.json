{"ast":null,"code":"// Function to load question data from JSON files\nexport const loadQuestions=async()=>{try{const questions={};// Replace with your actual file paths and fetching logic\nconst response2024=await fetch('/2024_mains.json');const data2024=await response2024.json();questions['2024 Mains']=data2024;const response2023=await fetch('/2023_mains.json');const data2023=await response2023.json();questions['2023 Mains']=data2023;// Add additional question sets as needed\n// Example:\n// const response2022 = await fetch('/2022_mains.json');\n// const data2022 = await response2022.json();\n// questions['2022 Mains'] = data2022;\nreturn questions;}catch(error){console.error('Error loading questions:',error);return{};}};","map":{"version":3,"names":["loadQuestions","questions","response2024","fetch","data2024","json","response2023","data2023","error","console"],"sources":["C:/Users/sriba/Documents/GitHub Repo Mocks/JeeMocks.github.io/src/utils/questionLoader.js"],"sourcesContent":["// Function to load question data from JSON files\r\nexport const loadQuestions = async () => {\r\n  try {\r\n    const questions = {};\r\n    \r\n    // Replace with your actual file paths and fetching logic\r\n    const response2024 = await fetch('/2024_mains.json');\r\n    const data2024 = await response2024.json();\r\n    questions['2024 Mains'] = data2024;\r\n\r\n    const response2023 = await fetch('/2023_mains.json');\r\n    const data2023 = await response2023.json();\r\n    questions['2023 Mains'] = data2023;\r\n\r\n    // Add additional question sets as needed\r\n    // Example:\r\n    // const response2022 = await fetch('/2022_mains.json');\r\n    // const data2022 = await response2022.json();\r\n    // questions['2022 Mains'] = data2022;\r\n\r\n    return questions;\r\n  } catch (error) {\r\n    console.error('Error loading questions:', error);\r\n    return {};\r\n  }\r\n};\r\n"],"mappings":"AAAA;AACA,MAAO,MAAM,CAAAA,aAAa,CAAG,KAAAA,CAAA,GAAY,CACvC,GAAI,CACF,KAAM,CAAAC,SAAS,CAAG,CAAC,CAAC,CAEpB;AACA,KAAM,CAAAC,YAAY,CAAG,KAAM,CAAAC,KAAK,CAAC,kBAAkB,CAAC,CACpD,KAAM,CAAAC,QAAQ,CAAG,KAAM,CAAAF,YAAY,CAACG,IAAI,CAAC,CAAC,CAC1CJ,SAAS,CAAC,YAAY,CAAC,CAAGG,QAAQ,CAElC,KAAM,CAAAE,YAAY,CAAG,KAAM,CAAAH,KAAK,CAAC,kBAAkB,CAAC,CACpD,KAAM,CAAAI,QAAQ,CAAG,KAAM,CAAAD,YAAY,CAACD,IAAI,CAAC,CAAC,CAC1CJ,SAAS,CAAC,YAAY,CAAC,CAAGM,QAAQ,CAElC;AACA;AACA;AACA;AACA;AAEA,MAAO,CAAAN,SAAS,CAClB,CAAE,MAAOO,KAAK,CAAE,CACdC,OAAO,CAACD,KAAK,CAAC,0BAA0B,CAAEA,KAAK,CAAC,CAChD,MAAO,CAAC,CAAC,CACX,CACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}